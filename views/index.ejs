<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/style.css" />
    <title>Servo app</title>
  </head>
  <body>
    <div class="container">
      <aside class="left-column">
        <section class="spotlight desktop">
          <div class="spotlight-header">
            <h2>Spotlight</h2>
            <a href="#" id="refresh-btn">refresh</a>
          </div>
          <div class="spotlight-content" id="spotlight-content">
            <div>
              <a href="#"><p id="station-name"></p></a>
              <span id="station-address"></span>
            </div>
            <div>
              <div class="box-nearest">
                <img
                  id="station-image"
                  src=""
                  alt=""
                  onerror="this.src='/assets/logos/default.png';"
                />
              </div>
            </div>
          </div>
        </section>
        <section class="stats desktop">
          <h2>Stats</h2>
          <p>Total Stations: <%= stats.total_stations %></p>
          <p>Total Owners: <%= stats.total_owners %></p>
          <div id="owner-stats">
            <% stats.top_stations.forEach(owner => { %>
            <div class="box-stats">
              <span><%= owner.owner %></span><span><%= owner.count %></span>
            </div>
            <% }) %>
          </div>
        </section>
        <section class="latest-prices desktop">
          <h2>latest prices</h2>
          <small>2023-03-08</small>
        </section>
        <section class="about desktop">
          <h2>about</h2>
          <h4>Team name: errorMakers</h4>
          <div class="about-links">

            <p>Ak: <a href="https://github.com/Akthiha"></a></p>
            <p>
              Cicero:
              <a href="https://github.com/cicerotcs"
                >https://github.com/cicerotcs</a
              >
            </p>
            <p>
              Iffath:
              <a href="https://github.com/iffath02"
                >https://github.com/iffath02</a
              >
            </p>
            <p>
              Stefanus:
              <a href="https://github.com/Amingman"
                >https://github.com/Amingman</a
              >
            </p>

            <p>Ak: <a href="https://github.com/Akthiha">https://github.com/Akthiha</a></p>
            <p>Cicero: <a href="https://github.com/cicerotcs">https://github.com/cicerotcs</a></p>
            <p>Iffath: <a href="https://github.com/iffath02">https://github.com/iffath02</a></p>
            <p>Stefanus: <a href="https://github.com/Amingman">https://github.com/Amingman</a></p>

          </div>

          <p>@ 2023 errorMakers</p>
          <p></p>
        </section>
      </aside>
      <main id="map"></main>
      <aside class="right-column">
        <section class="date mobile">
          <span>img</span>
          <h3></h3>
        </section>
        <section class="center-location">
          <h2>map center location</h2>
          <div class="center-location_coord">
            <p class="lat">Lat: -25.363</p>
            <p class="lng">Lng: 131.044</p>
          </div>

          <strong>92 bignell...</strong>
        </section>
        <section class="nearest">
          <h2>Nearest</h2>
        </section>
      </aside>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script
      async
      src="https://maps.googleapis.com/maps/api/js?key=<%= apiKey %>&callback=initMap"
    ></script>

    <script src="/map_api.js"></script>
    <script type="module" src="/commodity_api.js"></script>
    <script type="module" src="/keyboard_hotkeys.js"></script>
  </body>
</html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
<script>
  const realTime = document.querySelector(".date h3");

  setInterval(() => {
    realTime.textContent = moment().format("dddd, h:mm:ss a");
  }, 1000);

</script>

<script>
  const refreshBtn = document.getElementById("refresh-btn");
  const stationNameEl = document.getElementById("station-name");
  const stationAddressEl = document.getElementById("station-address");
  const stationImageEl = document.getElementById("station-image");
  const spotlightContentEl = document.getElementById("spotlight-content");

  // add event listener to the refresh button
  refreshBtn.addEventListener("click", async () => {
    try {
      // fetch data from the API
      const response = await fetch("/api/stations/random");
      const data = await response.json();

      // update the station name, address, and image on the page
      stationNameEl.innerText = data.name;
      stationAddressEl.innerText = data.address;
      stationImageEl.src = `/assets/logos/${data.owner
        .toLowerCase()
        .replace(/[" "]/g, "-")}.png`;
    } catch (error) {
      console.error(error);
    }
  });

  // show a random station when the page is loaded
  (async () => {
    try {
      // fetch data from the API
      const response = await fetch("/api/stations/random");
      const data = await response.json();

      // update the station name, address, and image on the page
      stationNameEl.innerText = data.name;
      stationAddressEl.innerText = data.address;
      stationImageEl.src = `/assets/logos/${data.owner
        .toLowerCase()
        .replace(/[" "]/g, "-")}.png`;
    } catch (error) {
      console.error(error);
    }
  })();
</script>


  function renderStations(station) {
    const box = `
    <div class="box-nearest">
      <img src="/assets/logos/${station.owner
        .toLowerCase()
        .replace(
          /[" "]/g,
          "-"
        )}.png" alt="" onerror="this.src='/assets/logos/default.png';">
          <div>
            <p>${station.name}</p>
            <p>${station.address}</p>
          </div>
    </div>
    `;
    nearestSection.innerHTML += box;
  }

  async function fetchStations() {
    const { data } = await axios.get("/api/stations/all");
    data.slice(0, 10).forEach((station) => {
      renderStations(station);
    });
  }

  fetchStations();
</script>

